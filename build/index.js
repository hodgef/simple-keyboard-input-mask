/*!
 * 
 *   simple-keyboard-input-mask v1.0.0
 *   https://github.com/hodgef/simple-keyboard-input-mask
 * 
 *   Copyright (c) Francisco Hodge (https://github.com/hodgef)
 * 
 *   This source code is licensed under the MIT license found in the
 *   LICENSE file in the root directory of this source tree.
 *   
 */
!function(e,t){"object"===typeof exports&&"object"===typeof module?module.exports=t():"function"===typeof define&&define.amd?define("SimpleKeyboardInputMask",[],t):"object"===typeof exports?exports.SimpleKeyboardInputMask=t():e.SimpleKeyboardInputMask=t()}(window,function(){return function(e){var t={};function __webpack_require__(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,__webpack_require__),n.l=!0,n.exports}return __webpack_require__.m=e,__webpack_require__.c=t,__webpack_require__.d=function(e,t,r){__webpack_require__.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},__webpack_require__.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},__webpack_require__.t=function(e,t){if(1&t&&(e=__webpack_require__(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(__webpack_require__.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)__webpack_require__.d(r,n,function(t){return e[t]}.bind(null,n));return r},__webpack_require__.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return __webpack_require__.d(t,"a",t),t},__webpack_require__.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},__webpack_require__.p="",__webpack_require__(__webpack_require__.s=0)}([function(e,t,r){e.exports=r(1)},function(e,t,r){"use strict";r.r(t);var n=function SimpleKeyboardInputMask(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,SimpleKeyboardInputMask),this.init=function(e){e.registerModule("inputMask",function(t){if(!e.options.inputMask)return console.warn("SimpleKeyboardInputMask: You must provide the inputMask option with your input mask"),!1;t.fn={},t.fn.getUpdatedInput=e.utilities.getUpdatedInput,e.utilities.getUpdatedInput=function(r,n,i,o,u){var a,p=e.options.inputMask;if(!p||"object"!==typeof p&&"string"!==typeof p||t.isBksp(r)||!u)return t.fn.getUpdatedInput(r,n,i,o,u);a="object"===typeof p?e.options.inputMask[e.options.inputName]:p;var _=t.autoAddSymbol(o,n,a,r);n=_.input||n,o=_.caretPos||o;var s=t.fn.getUpdatedInput(r,n,i,o,!1);return t.validateInputProposal(s,a,o)?t.fn.getUpdatedInput(r,n,i,o,u):e.getInput()},t.validateInputProposal=function(e,r,n){if(e&&"string"===typeof e&&r&&"string"===typeof e){var i=e.split(""),o=!0,u=n||0;if((0===n||n<e.length)&&!e[n+1]||r.length===e.length-1)for(u=0;u<i.length;u++)if(!t.isCharAllowed(i[u],r[u]))return o=!1,!1;return o}return!1},t.isCharAllowed=function(e,r){if(!e||!r)return!1;var n=t.isNumber(e)&&t.isNumber(r),i=t.isLetter(e)&&t.isLetter(r);return n||i||!n&&!i&&e===r},t.isBksp=function(e){return"{bksp}"===e||"{backspace}"===e},t.isNumber=function(e){return!isNaN(Number(e))&&null===e.match(/^\s$/)},t.isLetter=function(t){var r,n=/[a-z]/i;return r="object"===typeof e.options.letterCheckPattern?e.options.letterCheckPattern[e.options.inputName]||n:e.options.letterCheckPattern||n,t.match(r)},t.isSymbol=function(){},t.autoAddSymbol=function(r,n,i,o){r=n.trim()||r?n.length:0;for(var u=i.split(""),a=r;a<u.length&&u[a]&&!t.isNumber(u[a])&&!t.isLetter(u[a])&&Number(o);a++)n=e.utilities.addStringAt(n,u[a],a,!1),e.caretPosition=e.caretPosition?e.caretPosition+1:1;return{input:n,caretPos:e.caretPosition}}})}};t.default=n}])});
//# sourceMappingURL=index.js.map